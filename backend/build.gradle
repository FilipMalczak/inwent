plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

java {
	modularity.inferModulePath = true
}

group = 'com.github.fmd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

springBoot {
	buildInfo()
}


ext {
	set('springBootAdminVersion', "3.0.0-M4")
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

task copyMarkdowns(type: Copy) {
	from "../docs"
	into "build/resources/main/docs"
}

processResources.dependsOn copyMarkdowns

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springdoc:springdoc-openapi-webflux-core:2.0.0' //todo manage versions properly
//	implementation 'org.springdoc:springdoc-openapi-webflux-ui:2.0.0'
//	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.6.14' //todo manage versions properly
//	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.2'

	implementation 'de.codecentric:spring-boot-admin-starter-client'

	implementation 'org.valid4j:valid4j:0.5.0'//todo

	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
//	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task printVersion() {
	doLast { print version }
}

tasks.withType(Jar) {
	print "### $it"
	manifest {
		attributes('Automatic-Module-Name': project.group)
	}
}