plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
//	id 'name.remal.module-info-generator' version '1.5.0'
}

java {
	modularity.inferModulePath = true
}

group = 'com.github.filipmalczak'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "17.PREVIEW"
targetCompatibility = "17.PREVIEW"
//targetCompatibility = JavaVersion.VERSION_17_PREVIEW

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

springBoot {
	buildInfo()
}


ext {
	set('springBootAdminVersion', "3.0.0-M4")
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

task copyMarkdowns(type: Copy) {
	from "../docs"
	into "build/resources/main/docs"
}

processResources.dependsOn copyMarkdowns

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.0.2'

	implementation 'de.codecentric:spring-boot-admin-starter-client'

	implementation 'org.valid4j:valid4j:0.5.0'//todo

	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	testImplementation "org.testcontainers:postgresql:1.17.6" //todo
	testImplementation "org.testcontainers:junit-jupiter:1.17.6"

}

task printVersion() {
	doLast { print version }
}

tasks.withType(JavaCompile).all {
	options.compilerArgs += ['--enable-preview']
}

tasks.withType(Test).all {
	useJUnitPlatform()
	jvmArgs += '--enable-preview'
}

tasks.withType(Jar).all {
	manifest {
		attributes('Automatic-Module-Name': project.group)
	}
}

tasks.withType(JavaExec).all {
	jvmArgs += '--enable-preview'
}


